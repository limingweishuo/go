1、go常量之类型确定值[typed value] 和 类型不确定值[untyped value]
    --类型不确定值：某些值的类型有很多可能性，对绝大多数类型不确定值而言都有一个默认类型，除了nil，nil是没有默认类型的
    --类型确定值：和类型不确定值相对而言
    
    --类型不确定值：相对不确定值而言的一个概念
    
    --在go中绝大部分字面量和有名常量都是类型不确定的，且有自己的默认类型的
        --一个字符串字面量的默认类型是预声明的string类型。
        --一个布尔字面量的默认类型是预声明的bool类型。
        --一个整数型字面量的默认类型是预声明的int类型。
        --一个rune字面量的默认类型是预声明的rune（亦即int32）类型。
        --一个浮点数字面量的默认类型是预声明的float64类型。
        --如果一个字面量含有虚部字面量，则此字面量的默认类型是预声明的complex128类型。
    
2、 类型不确定值的显示类型转换  
    --T(v)：显式类型转换 
    --为了避免混淆，显式类型转换也可写作：(T)(v)
    
    --显式类型转换规则：
        --不能超过数据默认类型的表示范围
        --数字转化为string，是转化为数字对应的unicode字符，而不是数字本身，即使数字为rune类型也不例外
        --字符串转为数字，也是转到对应unicode编码序号
    总而言之，类型转换不需要强制去记，用的时候进行test打印即可
        
3、go在某些情况下会做一些类型推断工作，自动确定变量类型

4、

    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
